{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useCallback, useState, useEffect } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { ActivityIndicator } from 'react-native-paper';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport { useTranslation } from 'react-i18next';\nimport * as AppleAuthentication from 'expo-apple-authentication';\nimport Styled from \"./styles\";\nimport Button from \"../../components/Button\";\nimport { AuthContext } from \"../../store/context/auth-context\";\nimport api from \"../../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar platform = Constants.platform;\nvar LoginScreen = function LoginScreen(props) {\n  var navigation = props.navigation,\n    route = props.route;\n  var authCtx = useContext(AuthContext);\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    didLoad = _useState2[0],\n    setDidLoad = _useState2[1];\n  var _useState3 = useState({\n      value: false,\n      reason: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isCheckingSocial = _useState4[0],\n    setIsCheckingSocial = _useState4[1];\n  useFocusEffect(useCallback(function () {\n    var onBackPress = function onBackPress() {\n      BackHandler.exitApp();\n      return true;\n    };\n    BackHandler.addEventListener('hardwareBackPress', onBackPress);\n    return function () {\n      return BackHandler.removeEventListener('hardwareBackPress', onBackPress);\n    };\n  }, []));\n  useEffect(function () {\n    if (!didLoad && authCtx != null && authCtx.token) {\n      api.get('/api/v1/users/authenticate').then(function (response) {\n        var token = authCtx.token;\n        var data = response.data.data;\n        var user = {\n          email: data.email,\n          slug: data.slug,\n          name: data.name,\n          avatar: data.avatar\n        };\n        authCtx.login(token, user, new Date().setFullYear(new Date().getFullYear() + 1)).then(function () {\n          var _route$params;\n          if ((_route$params = route.params) != null && _route$params.roomSlug) {\n            var _route$params2;\n            navigation.navigate('JoinConferenceScreen', {\n              roomSlug: (_route$params2 = route.params) == null ? void 0 : _route$params2.roomSlug\n            });\n          } else {\n            navigation.navigate('DrawerNavigator');\n          }\n        }).catch(function (err) {\n          console.log(\"error \" + err);\n        });\n      }).catch(function (err) {\n        console.log(\"error \" + err);\n      });\n      setDidLoad(true);\n    }\n  }, [didLoad, authCtx]);\n  var LoginPage = function LoginPage() {\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_Fragment, {\n        children: [_jsx(Styled.AlternateLogin, {\n          children: _jsx(Styled.LoadingText, {\n            children: t('screens.login.login')\n          })\n        }), _jsx(Button, {\n          variant: \"secondary\",\n          onPress: function onPress() {\n            var _route$params3;\n            return navigation.navigate('EmailLoginScreen', {\n              roomSlug: (_route$params3 = route.params) == null ? void 0 : _route$params3.roomSlug\n            });\n          },\n          children: \"Email\"\n        })]\n      }), _jsx(StatusBar, {\n        style: \"dark\"\n      })]\n    });\n  };\n  return _jsx(Styled.Container, {\n    children: LoginPage()\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["useContext","useCallback","useState","useEffect","useFocusEffect","BackHandler","WebBrowser","ActivityIndicator","StatusBar","Constants","useTranslation","AppleAuthentication","Styled","Button","AuthContext","api","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","maybeCompleteAuthSession","platform","LoginScreen","props","navigation","route","authCtx","_useTranslation","t","_useState","_useState2","_slicedToArray","didLoad","setDidLoad","_useState3","value","reason","_useState4","isCheckingSocial","setIsCheckingSocial","onBackPress","exitApp","addEventListener","removeEventListener","token","get","then","response","data","user","email","slug","name","avatar","login","Date","setFullYear","getFullYear","_route$params","params","roomSlug","_route$params2","navigate","catch","err","console","log","LoginPage","children","AlternateLogin","LoadingText","variant","onPress","_route$params3","style","Container"],"sources":["/home/matheus/mconf/greenlight-mobile/src/screens/LoginScreen/index.js"],"sourcesContent":["/* eslint-disable react/jsx-indent */\nimport {\n  useContext, useCallback, useState, useEffect\n} from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {\n  BackHandler\n} from 'react-native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { ActivityIndicator } from 'react-native-paper';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport { useTranslation } from 'react-i18next';\nimport * as AppleAuthentication from 'expo-apple-authentication';\nimport Styled from './styles';\nimport Button from '../../components/Button';\nimport { AuthContext } from '../../store/context/auth-context';\nimport api from '../../services/api';\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst { platform } = Constants;\n\nconst LoginScreen = (props) => {\n  const { navigation, route } = props;\n  const authCtx = useContext(AuthContext);\n\n  const { t } = useTranslation();\n\n  const [didLoad, setDidLoad] = useState(false);\n  const [isCheckingSocial, setIsCheckingSocial] = useState({\n    value: false,\n    reason: '',\n  });\n\n  /* useEffects */\n\n  // Back button handler\n  useFocusEffect(\n    useCallback(() => {\n      const onBackPress = () => {\n        BackHandler.exitApp();\n        return true;\n      };\n      BackHandler.addEventListener('hardwareBackPress', onBackPress);\n\n      return () => BackHandler.removeEventListener('hardwareBackPress', onBackPress);\n    }, []),\n  );\n\n  // Authenticate user if token exists\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!didLoad && authCtx?.token) {\n      api.get('/api/v1/users/authenticate')\n        .then((response) => {\n          const { token } = authCtx;\n          const { data } = response.data;\n          const user = {\n            email: data.email, slug: data.slug, name: data.name, avatar: data.avatar\n          };\n          // eslint-disable-next-line react/destructuring-assignment\n          authCtx.login(token, user, new Date().setFullYear(new Date().getFullYear() + 1))\n            .then(() => {\n              if (route.params?.roomSlug) {\n                navigation.navigate('JoinConferenceScreen', { roomSlug: route.params?.roomSlug });\n              } else {\n                navigation.navigate('DrawerNavigator');\n              }\n            })\n            .catch((err) => {\n              console.log(`error ${err}`);\n            });\n        })\n        .catch((err) => {\n          console.log(`error ${err}`);\n        });\n      setDidLoad(true);\n    }\n  }, [didLoad, authCtx]);\n\n  const LoginPage = () => {\n    return (\n      <>\n        <>\n          <Styled.AlternateLogin>\n            <Styled.LoadingText>{t('screens.login.login')}</Styled.LoadingText>\n          </Styled.AlternateLogin>\n\n          <Button\n            variant=\"secondary\"\n            onPress={() => navigation.navigate('EmailLoginScreen', { roomSlug: route.params?.roomSlug })}\n          >\n            Email\n          </Button>\n\n        </>\n        <StatusBar style=\"dark\" />\n      </>\n    );\n  };\n\n  return (\n    <Styled.Container>\n      {LoginPage()}\n    </Styled.Container>\n  );\n};\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}