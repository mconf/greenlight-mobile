{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Constants from 'expo-constants';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from \"../../../components/TextInput\";\nimport Button from \"../../../components/Button\";\nimport Styled from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(props) {\n  var navigation = props.navigation,\n    route = props.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    emailError = _useState2[0],\n    setEmailError = _useState2[1];\n  var platform = Constants.platform;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState3 = useState({\n      name: '',\n      email: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputValues = _useState4[0],\n    setInputValues = _useState4[1];\n  var onChangeInputHandler = function onChangeInputHandler(inputIdentifier, value) {\n    setInputValues(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, inputIdentifier, value));\n    });\n  };\n  var validateEmail = function validateEmail() {\n    var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n    if (reg.test(inputValues.email) === false) {\n      setEmailError(true);\n      return false;\n    }\n    return true;\n  };\n  var signIn = function signIn() {\n    if (validateEmail()) {\n      var _route$params;\n      navigation.navigate('JoinConferenceScreen', {\n        roomSlug: (_route$params = route.params) == null ? void 0 : _route$params.roomSlug,\n        guest: _objectSpread({}, inputValues)\n      });\n    }\n  };\n  return _jsx(KeyboardAvoidingView, {\n    behavior: platform.ios ? 'padding' : 'height',\n    style: {\n      flex: 1\n    },\n    children: _jsx(TouchableWithoutFeedback, {\n      children: _jsxs(Styled.Container, {\n        children: [_jsx(Styled.InputView, {\n          children: _jsx(TextInput, {\n            label: t('screens.guest.name'),\n            autoCorrect: false,\n            value: inputValues.name,\n            onChangeText: onChangeInputHandler.bind(_this, 'name')\n          })\n        }), _jsx(Styled.InputView, {\n          children: _jsx(TextInput, {\n            label: \"Email\",\n            autoCorrect: false,\n            onError: emailError,\n            autoCapitalize: \"none\",\n            value: inputValues.email,\n            keyboardType: \"email-address\",\n            onChangeText: onChangeInputHandler.bind(_this, 'email')\n          })\n        }), _jsx(Styled.Disclamer, {\n          children: t('screens.guest.newsletter')\n        }), _jsx(Button, {\n          variant: \"tertiary\",\n          onPress: signIn,\n          children: t('screens.guest.join')\n        })]\n      })\n    })\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["useState","KeyboardAvoidingView","TouchableWithoutFeedback","Constants","useTranslation","TextInput","Button","Styled","jsx","_jsx","jsxs","_jsxs","LoginScreen","props","navigation","route","_useState","_useState2","_slicedToArray","emailError","setEmailError","platform","_useTranslation","t","_useState3","name","email","_useState4","inputValues","setInputValues","onChangeInputHandler","inputIdentifier","value","prevState","_objectSpread","_defineProperty","validateEmail","reg","test","signIn","_route$params","navigate","roomSlug","params","guest","behavior","ios","style","flex","children","Container","InputView","label","autoCorrect","onChangeText","bind","_this","onError","autoCapitalize","keyboardType","Disclamer","variant","onPress"],"sources":["/home/matheus/mconf/greenlight-mobile/src/screens/JoinConferenceScreen/GuestLoginScreen/index.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n  KeyboardAvoidingView, TouchableWithoutFeedback\n} from 'react-native';\nimport Constants from 'expo-constants';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '../../../components/TextInput';\nimport Button from '../../../components/Button';\nimport Styled from './styles';\n\nconst LoginScreen = (props) => {\n  const { navigation, route } = props;\n  const [emailError, setEmailError] = useState(false);\n  const { platform } = Constants;\n  const { t } = useTranslation();\n\n  const [inputValues, setInputValues] = useState({\n    name: '',\n    email: '',\n  });\n\n  const onChangeInputHandler = (inputIdentifier, value) => {\n    setInputValues((prevState) => {\n      return {\n        ...prevState,\n        [inputIdentifier]: value,\n      };\n    });\n  };\n\n  const validateEmail = () => {\n    // eslint-disable-next-line no-useless-escape\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n    if (reg.test(inputValues.email) === false) {\n      setEmailError(true);\n      return false;\n    }\n    return true;\n  };\n\n  const signIn = () => {\n    if (validateEmail()) {\n      navigation.navigate('JoinConferenceScreen', {\n        roomSlug: route.params?.roomSlug,\n        guest: { ...inputValues },\n      });\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={platform.ios ? 'padding' : 'height'}\n      style={{ flex: 1 }}\n    >\n      <TouchableWithoutFeedback>\n        <Styled.Container>\n          <Styled.InputView>\n            <TextInput\n              label={t('screens.guest.name')}\n              autoCorrect={false}\n              value={inputValues.name}\n              onChangeText={onChangeInputHandler.bind(this, 'name')}\n            />\n          </Styled.InputView>\n          <Styled.InputView>\n            <TextInput\n              label=\"Email\"\n              autoCorrect={false}\n              onError={emailError}\n              autoCapitalize=\"none\"\n              value={inputValues.email}\n              keyboardType=\"email-address\"\n              onChangeText={onChangeInputHandler.bind(this, 'email')}\n            />\n          </Styled.InputView>\n          <Styled.Disclamer>\n            {t('screens.guest.newsletter')}\n          </Styled.Disclamer>\n          <Button variant=\"tertiary\" onPress={signIn}>\n            {t('screens.guest.join')}\n          </Button>\n        </Styled.Container>\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}