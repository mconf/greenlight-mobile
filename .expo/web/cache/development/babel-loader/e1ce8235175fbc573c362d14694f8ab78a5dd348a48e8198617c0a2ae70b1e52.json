{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTranslation } from 'react-i18next';\nimport { AuthContextProvider } from \"./src/store/context/auth-context\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport Colors from \"./src/constants/colors\";\nimport \"./src/utils/i18n\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar prefix = Linking.createURL('portal');\nvar App = function App() {\n  console.log(prefix);\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var config = {\n    screens: {\n      UpdateAppScreen: {\n        path: 'join/:roomSlug',\n        parse: {\n          roomSlug: function roomSlug(_roomSlug) {\n            return \"\" + _roomSlug;\n          }\n        }\n      }\n    }\n  };\n  var linking = {\n    prefixes: [prefix],\n    config: config\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(NavigationContainer, {\n      linking: linking,\n      children: _jsx(AuthContextProvider, {\n        children: _jsx(Stack.Navigator, {\n          screenOptions: {\n            headerStyle: {\n              backgroundColor: Colors.blue\n            },\n            headerTintColor: Colors.white,\n            contentStyle: {\n              backgroundColor: Colors.white\n            },\n            headerTitleAlign: 'center'\n          },\n          children: _jsx(Stack.Screen, {\n            name: \"LoginScreen\",\n            component: LoginScreen,\n            options: {\n              title: 'Login',\n              headerShown: false\n            }\n          })\n        })\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\nexport default App;","map":{"version":3,"names":["StatusBar","NavigationContainer","createNativeStackNavigator","useTranslation","AuthContextProvider","LoginScreen","Colors","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","prefix","Linking","createURL","App","console","log","_useTranslation","t","config","screens","UpdateAppScreen","path","parse","roomSlug","linking","prefixes","children","Navigator","screenOptions","headerStyle","backgroundColor","blue","headerTintColor","white","contentStyle","headerTitleAlign","Screen","name","component","options","title","headerShown","style"],"sources":["/home/matheus/mconf/greenlight-mobile/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport { useTranslation } from 'react-i18next';\nimport { AuthContextProvider } from './src/store/context/auth-context';\n\n// Screens\nimport LoginScreen from './src/screens/LoginScreen';\n\nimport Colors from './src/constants/colors';\nimport './src/utils/i18n';\n\nconst Stack = createNativeStackNavigator();\nconst prefix = Linking.createURL('portal');\n\nconst App = () => {\n  console.log(prefix);\n  const { t } = useTranslation();\n\n  const config = {\n    screens: {\n      UpdateAppScreen: {\n        path: 'join/:roomSlug',\n        parse: {\n          roomSlug: (roomSlug) => `${roomSlug}`\n        }\n      },\n    },\n  };\n\n  const linking = {\n    prefixes: [prefix],\n    config\n  };\n\n  return (\n    <>\n      <NavigationContainer linking={linking}>\n        <AuthContextProvider>\n          <Stack.Navigator screenOptions={{\n            headerStyle: { backgroundColor: Colors.blue },\n            headerTintColor: Colors.white,\n            contentStyle: { backgroundColor: Colors.white },\n            headerTitleAlign: 'center',\n          }}\n          >\n            <Stack.Screen\n              name=\"LoginScreen\"\n              component={LoginScreen}\n              options={{\n                title: 'Login',\n                headerShown: false,\n              }}\n            />\n\n          </Stack.Navigator>\n        </AuthContextProvider>\n      </NavigationContainer>\n      <StatusBar style=\"auto\" />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAE3E,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,mBAAmB;AAG5B,OAAOC,WAAW;AAElB,OAAOC,MAAM;AACb;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,KAAK,GAAGX,0BAA0B,EAAE;AAC1C,IAAMY,MAAM,GAAGC,OAAO,CAACC,SAAS,CAAC,QAAQ,CAAC;AAE1C,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChBC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EACnB,IAAAM,eAAA,GAAcjB,cAAc,EAAE;IAAtBkB,CAAC,GAAAD,eAAA,CAADC,CAAC;EAET,IAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,eAAe,EAAE;QACfC,IAAI,EAAE,gBAAgB;QACtBC,KAAK,EAAE;UACLC,QAAQ,EAAE,SAAAA,SAACA,SAAQ;YAAA,YAAQA,SAAQ;UAAA;QACrC;MACF;IACF;EACF,CAAC;EAED,IAAMC,OAAO,GAAG;IACdC,QAAQ,EAAE,CAACf,MAAM,CAAC;IAClBQ,MAAM,EAANA;EACF,CAAC;EAED,OACEV,KAAA,CAAAF,SAAA;IAAAoB,QAAA,GACEtB,IAAA,CAACP,mBAAmB;MAAC2B,OAAO,EAAEA,OAAQ;MAAAE,QAAA,EACpCtB,IAAA,CAACJ,mBAAmB;QAAA0B,QAAA,EAClBtB,IAAA,CAACK,KAAK,CAACkB,SAAS;UAACC,aAAa,EAAE;YAC9BC,WAAW,EAAE;cAAEC,eAAe,EAAE5B,MAAM,CAAC6B;YAAK,CAAC;YAC7CC,eAAe,EAAE9B,MAAM,CAAC+B,KAAK;YAC7BC,YAAY,EAAE;cAAEJ,eAAe,EAAE5B,MAAM,CAAC+B;YAAM,CAAC;YAC/CE,gBAAgB,EAAE;UACpB,CAAE;UAAAT,QAAA,EAEAtB,IAAA,CAACK,KAAK,CAAC2B,MAAM;YACXC,IAAI,EAAC,aAAa;YAClBC,SAAS,EAAErC,WAAY;YACvBsC,OAAO,EAAE;cACPC,KAAK,EAAE,OAAO;cACdC,WAAW,EAAE;YACf;UAAE;QACF;MAEc;IACE,EACF,EACtBrC,IAAA,CAACR,SAAS;MAAC8C,KAAK,EAAC;IAAM,EAAG;EAAA,EACzB;AAEP,CAAC;AAED,eAAe7B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}